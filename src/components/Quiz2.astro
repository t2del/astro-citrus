<div id="ehs-quiz-container" class="ehs-quiz-container">
    <div class="quiz-step-bar">
        <span class="step active"></span>
        <span class="step"></span>
        <span class="step"></span>
        <span class="step"></span>
    </div>
    <div id="quiz-intro" class="quiz-section active title ml-2 md:top-4 md:z-20">
        <h2>EHS Interactive Quiz</h2>
        <p>Answer a few simple questions to get an indication of your lifestyle habits and find out which health screening package might be suitable for you.</p>
        <button id="start-quiz-btn" class="quiz-button">Start Quiz</button>
    </div>

    <div id="quiz-questions" class="quiz-section">
        <div id="question-display">
            <h3 id="question-text" class="title ml-2 md:top-4 md:z-20"></h3>
            <form id="options-form" class="quiz-options"></form>
            <div id="notice-display" class="quiz-notice"></div>
        </div>
        <div class="quiz-navigation-buttons">
            <button id="prev-question-btn" class="quiz-button" style="display: none;">Previous</button>
            <button id="next-question-btn" class="quiz-button" disabled>Next</button>
        </div>
    </div>

    <div id="quiz-results" class="quiz-section">
        <h2 class="title ml-2 md:top-4 md:z-20">Your Quiz Results</h2>
        <p>Based on your age, here is your recommended health screening package:</p>
        <h3 id="result-heading"></h3>
        <p id="result-advice"></p>
        <p>Recommended Package: <strong id="recommended-package"></strong></p>
        <button id="restart-quiz-btn" class="quiz-button">Restart Quiz</button>
    </div>
</div>
<script is:inline>
    document.addEventListener('DOMContentLoaded', () => {
        // Define your quiz questions and options using the provided basis
        const quizQuestions = [
            {
                id: 'gender',
                question: "Please indicate your gender",
                notice: "<strong>For Women: </strong>Prioritise Regular Health Check-ups: Schedule routine visits with your healthcare provider to monitor your overall health, including screenings for breast cancer, cervical cancer, and osteoporosis.<p><strong>For Men: </strong>Get Regular Check-ups: Don’t neglect preventive healthcare. Regularly visit your doctor for screenings and assessments related to conditions like heart disease, prostate cancer, and high blood pressure.</p>",
                options: [
                    { text: "Female", key: 'gender_female' },
                    { text: "Male", key: 'gender_male' }
                ]
            },
            {
                id: 'age', // This ID is crucial for the age-based package logic
                question: "Please select your age group",
                options: [
                    { text: "18 to 29", key: '18 to 29' }, // Key matches age string for result logic
                    { text: "30 to 39", key: '30 to 39' },
                    { text: "40 to 49", key: '40 to 49' },
                    { text: "50 and above", key: '50 and above' }
                ]
            },
            // Placeholder for the dynamic question 3
            {
                id: 'dynamic_q3',
                question: "", // Question text will be dynamically set
                options: [] // Options will be dynamically set
            },
            {
              id: 'familyHistory',
              question: "Do you have any family history of chronic diseases (ie: Hypertension/Diabetes/High cholesterol)?",
              options: [
                { text: "Yes", key: 'family_history_yes' },
                { text: "No", key: 'family_history_no' }
              ],
              notice: "Knowing your family history allows healthcare providers to identify potential red flags and recommend appropriate screenings at an earlier age or with greater frequency. This proactive approach increases the likelihood of detecting diseases in their early stages when they may be more treatable or manageable."
            }
        ];

        // Add this after your package definitions
        const q3Options = [
            {"code":"irregular_menses_cycles","option":"Do you have irregular menstrual cycles?","gender_age_group":"Female 18 to 29","notice":"<p><span class=\"ui-provider gs b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak\" dir=\"ltr\">If you experience persistent or significant changes in your menstrual cycles, it is important to consult with a healthcare provider. They can help identify the underlying cause, provide appropriate treatment if needed, and address any concerns or potential complications.<\/span><\/p>\n"},
            {"code":"hpv_dna_test","option":"Have you done a HPV DNA  test before?","gender_age_group":"Female 30 to 39","notice":"<p><span class=\"cf0\"><strong>Cervical cancer<\/strong> is the cancer of the lower part of the womb, i.e. the cervix, which is mostly caused by the presence of a long-lasting high-risk human papillomavirus (HPV) infection. HPV infections can be spread via skin-to-skin contact such as sexual activity.<\/span><\/p>\n<p>A <strong>HPV DNA<\/strong> test checks for high-risk, potentially cancerous HPV strains in your cervical cells and is primarily performed as part of cervical cancer screening.<\/p>\n"},
            {"code":"mamogram","option":"Have you done a Mammogram this year?","gender_age_group":"Female 40 to 49","notice":"<p><strong>Mammograms<\/strong> are highly effective in detecting breast cancer at its early stages, even before symptoms become apparent. Early detection increases the chances of successful treatment and improves overall survival rates.<\/p>\n<p>Mammograms can detect small lumps, calcifications, or other abnormalities in breast tissue that may indicate the presence of cancer or other conditions.<\/p>\n"},
            {"code":"colonoscopy_bone_densitometry","option":"Have you done Colonoscopy or Bone Densitometry yet?","gender_age_group":"Female 50 and above","notice":"<p><strong>Colonoscopy<\/strong>: A colonoscopy is a diagnostic procedure that allows a healthcare provider to examine the inner lining of the large intestine (colon) and rectum. It is commonly used to screen for colorectal cancer, as well as diagnose and monitor various conditions affecting the colon.<\/p>\n<p><strong>Bone Densitometry<\/strong>: Bone densitometry, also known as dual-energy X-ray absorptiometry (DXA or DEXA) scan, is a non-invasive procedure used to measure bone mineral density (BMD). It is primarily performed to diagnose osteoporosis, a condition characterised by weakened and brittle bones.<\/p>\n"},
            {"code":"do_you_smoke","option":"Do you smoke?","gender_age_group":"Male 18 to 29","notice":"<p><span class=\"ui-provider gs b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak\" dir=\"ltr\"><strong>Smoking<\/strong> is the leading cause of lung cancer, and men who smoke have a significantly higher risk of developing this deadly disease. The harmful chemicals in tobacco smoke can damage the cells in the lungs and increase the likelihood of tumour formation.<\/span><\/p>\n"},
            {"code":"exercise_regularly","option":"Do you exercise regularly?","gender_age_group":"Male 30 to 39","notice":"<p><span class=\"ui-provider gs b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak\" dir=\"ltr\"><strong>Regular exercise<\/strong>, particularly aerobic activities like jogging, cycling, or swimming, helps improve cardiovascular health. It strengthens the heart, improves blood circulation, lowers blood pressure, reduces the risk of heart disease, and decreases the chances of experiencing a heart attack or stroke. Exercise plays a crucial role in maintaining a healthy weight or managing weight loss.\u00a0<\/span><\/p>\n"},
            {"code":"urinate_frequently","option":"Do you urinate frequently?","gender_age_group":"Male 40 to 49","notice":"<p><strong>Overactive bladder<\/strong> is a condition characterised by an uncontrollable urge to urinate, resulting in frequent urination, including during the night. It can occur due to abnormal bladder muscle contractions or nerve-related issues.<\/p>\n<p>Certain medications, such as diuretics (water pills), may increase urine production and lead to more frequent urination. Psychological factors like anxiety or stress can affect bladder function and result in increased urinary frequency.<\/p>\n"},
            {"code":"colonoscopy","option":"Have you ever done a Colonoscopy?","gender_age_group":"Male 50 and above","notice":"<p><span class=\"ui-provider gs b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak\" dir=\"ltr\"><strong>Colonoscopy<\/strong> is considered the gold standard for detecting and preventing colorectal cancer, which is the third most common cancer in men. Regular screenings can help detect precancerous polyps or early-stage cancers in the colon or rectum, allowing for early intervention and increased chances of successful treatment.<\/span><\/p>\n"}
        ];

        // Define your package details (these are examples, adjust as needed)
        const packagePremium = {
            heading: "Fuller Life - Premium",
            advice: "Fuller Life Premium is a screening for lifestyle diseases. A diagnosis made at an early age can prevent serious illness in the future. This package is tailored towards young adults. It provides an understanding of an individual’s health condition to avoid common health risks.",
            name: "Premium"
        };

        const packageGold = {
            heading: "Fuller Life - Gold",
            advice: "Fuller Life Gold tailors to your age group and lifestyle where early detection is fundamental. Early detection can improve the quality of health and life. It is recommended to determine the health risks that may develop over time including chronic diseases - high blood pressure, high cholesterol and diabetes.\nFor ladies, a choice of Ultrasound Breast or Ultrasound Pelvis is available and a choice of Ultrasound Prostate or Treadmill test for the men.",
            name: "Gold"
        };

        const packageSapphire = {
            heading: "Fuller Life - Sapphire",
            advice: "Fuller Life Sapphire tailors to your age group and lifestyle where early detection is fundamental. Early detection can improve the quality of health and life. It is recommended to determine the health risks that may develop over time including chronic diseases - high blood pressure, cholesterol and diabetes. \nFor ladies, a choice of Ultrasound Breast, Ultrasound Pelvis, Mammogram or Cervical Cancer Screening – HPV DNA is available and a choice of Ultrasound Prostate or Treadmill test for the men. This package includes tonometry, a screening that checks if you are at risk of glaucoma.",
            name: "Sapphire"
        };

        const packagePlatinum = {
            heading: "Fuller Life - Platinum",
            advice: "Fuller Life Platinum provides a thorough and comprehensive assessments of several aspects of your health. This package will aid and improve your health and lifestyle goals.\n\nFor ladies, a choice of Ultrasound Breast, Ultrasound Pelvis and Mammogram is available and a choice of Ultrasound Prostate or Treadmill for the men. This package includes a comprehensive set of tumour markers and anti nuclear antibody.\n\nIn addition, it comprises of one of the following choices –\nCT Cardiac Calcium score : to measure the risk of developing heart disease\nCT Lung Screen : to diagnose lung cancer at a very early stage\nHPV DNA test : to screen for Cervical Cancer\nGastro Clear: Gastric Cancer Screening : Simplifies Stomach Cancer detection by using a blood test to assess stomach cancer risk before symptoms appear.\nBone Densitometry : to determine risk for osteoporosis",
            name: "Platinum"
        };


        let currentQuestionIndex = 0;
        let userAnswers = {};

        // Get references to DOM elements
        const quizIntro = document.getElementById('quiz-intro');
        const quizQuestionsSection = document.getElementById('quiz-questions');
        const quizResultsSection = document.getElementById('quiz-results');

        const startQuizBtn = document.getElementById('start-quiz-btn');
        const nextQuestionBtn = document.getElementById('next-question-btn');
        const prevQuestionBtn = document.getElementById('prev-question-btn');
        const restartQuizBtn = document.getElementById('restart-quiz-btn');

        const questionTextElem = document.getElementById('question-text');
        const optionsForm = document.getElementById('options-form');

        const resultHeadingElem = document.getElementById('result-heading');
        const resultAdviceElem = document.getElementById('result-advice');
        const recommendedPackageElem = document.getElementById('recommended-package');

        // Get reference to the notice display element
        const noticeDisplayElem = document.getElementById('notice-display');

        const quizStepBar = document.querySelector('.quiz-step-bar');
        const steps = quizStepBar.querySelectorAll('.step');


        /**
         * Updates the active state of the step bar.
         */
        function updateStepBar() {
            steps.forEach((step, index) => {
                if (index === currentQuestionIndex) {
                    step.classList.add('active');
                } else {
                    step.classList.remove('active');
                }
            });

            // Hide step bar on intro and results sections
            if (quizIntro.classList.contains('active') || quizResultsSection.classList.contains('active')) {
                quizStepBar.style.display = 'none';
            } else {
                quizStepBar.style.display = 'flex'; // Show it during questions
            }
        }

        /**
         * Controls which quiz section is visible.
         * @param {string} sectionId - The ID of the section to show ('quiz-intro', 'quiz-questions', 'quiz-results').
         */
        function showSection(sectionId) {
            document.querySelectorAll('.quiz-section').forEach(section => {
                section.classList.remove('active');
            });
            document.getElementById(sectionId).classList.add('active');
            updateStepBar(); // Call updateStepBar whenever a section is shown
        }

        /**
         * Renders the current question and its options to the DOM.
         */
        function renderQuestion() {
            let question = quizQuestions[currentQuestionIndex];
            noticeDisplayElem.innerHTML = ''; // Clear previous notice

            if (!question) {
                showResults(); // If no more questions, show results
                return;
            }

            // Display notice for any question that has it
            if (question.notice) {
                noticeDisplayElem.innerHTML = question.notice;
            }

            // Handle the dynamic question 3
            if (question.id === 'dynamic_q3') {
                const selectedGender = userAnswers.gender ? userAnswers.gender.selectedOptionKey : null;
                const selectedAge = userAnswers.age ? userAnswers.age.selectedOptionKey : null;

                if (selectedGender && selectedAge) {
                    const targetGender = selectedGender === 'gender_female' ? 'Female' : 'Male';
                    const targetAge = selectedAge; // Age key is already the string we need

                    const relevantQ3 = q3Options.find(q =>
                        q.gender_age_group === `${targetGender} ${targetAge}`
                    );

                    if (relevantQ3) {
                        question.question = relevantQ3.option;
                        question.options = [
                            { text: "Yes", key: `${relevantQ3.code}_yes` },
                            { text: "No", key: `${relevantQ3.code}_no` }
                        ];
                        // Display the notice if available for dynamic Q3
                        if (relevantQ3.notice) {
                            noticeDisplayElem.innerHTML = relevantQ3.notice;
                        }
                    } else {
                        question.question = "No specific health question for your selected demographics.";
                        question.options = [];
                        nextQuestionBtn.disabled = false; // Allow to proceed if no question
                    }
                } else {
                    // If gender or age not selected, can't determine dynamic Q3, go back or show error
                    question.question = "Please go back and select your gender and age group.";
                    question.options = [];
                    nextQuestionBtn.disabled = true; // User must select previous answers first
                }
            }


            questionTextElem.textContent = `Q${currentQuestionIndex + 1}. ${question.question}`;
            optionsForm.innerHTML = ''; // Clear previous options

            if (question.options.length > 0) { // Only render options if there are any
                question.options.forEach(option => {
                    const label = document.createElement('label');
                    label.className = 'quiz-option-label'; // Add a class to the label element
                    const input = document.createElement('input');
                    input.className = 'quiz-option-input'; // Add a class to the input element
                    input.type = 'radio';
                    input.name = `question-${question.id}`; // Group radio buttons for this question
                    input.value = option.key; // Unique key for the option (e.g., age range or option ID)

                    // Check if this option was previously selected
                    if (userAnswers[question.id] && userAnswers[question.id].selectedOptionKey === option.key) {
                        input.checked = true;
                        nextQuestionBtn.disabled = false; // Enable next button if this question already has an answer
                    }

                    const span = document.createElement('span');
                    span.textContent = option.text;

                    label.appendChild(input);
                    label.appendChild(span);
                    optionsForm.appendChild(label);

                    // Add event listener for when an option is selected
                    input.addEventListener('change', (event) => {
                        userAnswers[question.id] = {
                            selectedOptionKey: event.target.value
                        };
                        nextQuestionBtn.disabled = false; // Enable next button on selection
                    });
                });
            } else {
                // If no options, ensure next button is enabled to proceed past this "question"
                nextQuestionBtn.disabled = false;
            }


            // Handle Previous button visibility
            if (currentQuestionIndex === 0) {
                prevQuestionBtn.style.display = 'none';
            } else {
                prevQuestionBtn.style.display = 'block'; /* Or 'inline-block' if you want to use it directly without the flex container */
            }

            // Change "Next" button to "Submit" on the last question
            if (currentQuestionIndex === quizQuestions.length - 1) {
                nextQuestionBtn.textContent = 'Submit';
            } else {
                nextQuestionBtn.textContent = 'Next';
            }


            // Initially disable the 'Next' button if no answer is selected for the current question
            if (!userAnswers[question.id] || userAnswers[question.id].selectedOptionKey === undefined) {
                nextQuestionBtn.disabled = true;
            } else {
                nextQuestionBtn.disabled = false;
            }

            showSection('quiz-questions');
        }

        /**
         * Determines and displays the final recommended package based on the age group.
         */
        function showResults() {
            const selectedAge = userAnswers.age ? userAnswers.age.selectedOptionKey : null;
            let packageDisplay = null;

            if (selectedAge === '18 to 29') {
                packageDisplay = packagePremium;
            } else if (selectedAge === '30 to 39') {
                packageDisplay = packageGold;
            } else if (selectedAge === '40 to 49') {
                packageDisplay = packageSapphire;
            } else if (selectedAge === '50 and above') {
                packageDisplay = packagePlatinum;
            } else {
                // Fallback if age is not selected or unrecognized
                packageDisplay = {
                    heading: "Unable to Recommend Package",
                    advice: "Please ensure you've selected your age group to receive a personalized package recommendation.",
                    name: "N/A"
                };
            }

            resultHeadingElem.textContent = packageDisplay.heading;
            resultAdviceElem.textContent = packageDisplay.advice;
            recommendedPackageElem.textContent = packageDisplay.name;

            showSection('quiz-results');
        }

        /**
         * Resets the quiz to its initial state.
         */
        function resetQuiz() {
            currentQuestionIndex = 0;
            userAnswers = {};
            nextQuestionBtn.disabled = true;
            // Ensure prev button is hidden on reset
            prevQuestionBtn.style.display = 'none';
            noticeDisplayElem.innerHTML = ''; // Clear notice on reset
            // Reset the dynamic question placeholder
            quizQuestions[2].question = "";
            quizQuestions[2].options = [];
            // Reset the Next button text
            nextQuestionBtn.textContent = 'Next';
            showSection('quiz-intro');
        }

        // Event Listeners
        startQuizBtn.addEventListener('click', () => {
            renderQuestion();
        });

        nextQuestionBtn.addEventListener('click', () => {
            // Ensure an answer is selected before proceeding (button is disabled if not, but good to double-check)
            if (userAnswers[quizQuestions[currentQuestionIndex].id]) {
                if (currentQuestionIndex < quizQuestions.length - 1) {
                    currentQuestionIndex++;
                    renderQuestion();
                } else {
                    showResults(); // End of quiz
                }
            }
        });

        // New event listener for Previous button
        prevQuestionBtn.addEventListener('click', () => {
            if (currentQuestionIndex > 0) {
                currentQuestionIndex--;
                renderQuestion();
            }
        });

        restartQuizBtn.addEventListener('click', () => {
            resetQuiz();
        });

        // Initialize the quiz when the DOM is fully loaded
        // This is already present and correct, ensure the rest of your JS is inside this.
        // document.addEventListener('DOMContentLoaded', () => {
        resetQuiz(); // Set to intro state initially
        // });
    });
</script>

<style is:inline>
  /* Basic styling for the quiz component.
     For production, consider external CSS or a robust CSS-in-JS solution.
  */
  .ehs-quiz-container {
    max-width: 700px;
    margin: 40px auto;
    padding: 30px;
    background-color: #fff;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    color: #333;
    line-height: 1.6;
  }

  .quiz-section {
    display: none; /* Hidden by default, managed by JS */
  }

  .quiz-section.active {
    display: block;
  }

  h2 {
    margin-bottom: 20px;
  }

  h3 {

    margin-bottom: 15px;
  }

  p {
    margin-bottom: 10px;
  }

  /* Styling for the navigation buttons container */
  .quiz-navigation-buttons {
    display: flex;
    justify-content: space-between; /* Pushes buttons to ends */
    margin-top: 20px;
    gap: 10px; /* Space between buttons */
  }

  .quiz-button {
    flex: 1; /* Allows buttons to grow and shrink equally within the flex container */
    padding: 12px 20px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    font-size: 1.1em;
    cursor: pointer;
    transition: background-color 0.3s ease;
    /* Removed display: block; width: 100%; to allow flexbox to control sizing */
  }

  .quiz-button:hover:not(:disabled) {
    background-color: #0056b3;
  }

  .quiz-button:disabled {
    background-color: #cccccc;
    cursor: not-allowed;
  }

  .quiz-options input[type="radio"] {
    margin-right: 10px;
    transform: scale(1.2); /* Slightly larger radio buttons */
    opacity: 0;
    position: fixed;
    width: 0;
  }

  .quiz-options input[type="radio"]:checked + span {
    font-weight: bold;
    color: #007bff; /* Highlight text of selected option */
  }
    .quiz-options label.quiz-option-label span {
        display: inline-block;
        background-color: #ddd;
        padding: 10px 20px;
        font-family: sans-serif, Arial;
        font-size: 16px;
        border: 2px solid #c6c6c6;
        border-radius: 5px;
        margin: 5px 5px;
        cursor: pointer;
        min-width: 150px;
        text-align: center;
        transition: background-color 0.2s ease, border-color 0.2s ease;
    }
    .quiz-options label.quiz-option-label span:hover {
        background-color: #e9ecef;
        border-color: #007bff; /* Highlight border on hover */
        transition: background-color 0.2s ease, border-color 0.2s ease;
    }
    /* This rule is redundant and can be removed or expanded if needed */
    .quiz-options input[type="radio"] {

    }
    /* ... existing CSS ... */

    /* Step Bar Styling */
    .quiz-step-bar {
        display: flex;
        justify-content: space-between;
        margin-bottom: 30px;
        gap: 10px;
    }

    .quiz-step-bar .step {
        flex: 1;
        height: 8px;
        background-color: #e0e0e0;
        border-radius: 4px;
        transition: background-color 0.3s ease;
    }

    .quiz-step-bar .step.active {
        background-color: #007bff;
    }

</style>
